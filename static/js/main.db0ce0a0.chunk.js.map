{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","style","color","backgroundColor","rows","value","placeholder","onChange","event","target","temp","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","split","Alert","alert","Type","role","msg","App","setAlert","Mode","setMode","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db0ce0a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode=== 'light'? 'Dark' : 'light'}`}>\r\n        <input className= \"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" id= \"flexSwitchCheckDefault\" />\r\n        <label className= \"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Disable':'Enable'} Light Mode </label>\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={title:PropTypes.string}","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  \r\n    const [text,setText]=useState('')\r\n    const uppercaseClick=()=>{\r\n        let temp=text.toUpperCase();\r\n        setText(temp)\r\n        props.showAlert('Text converted to uppercase','success')\r\n    }\r\n    const lowercaseClick=()=>{\r\n      let temp=text.toLowerCase();\r\n      setText(temp)\r\n      props.showAlert('Text converted to lowercase','success')\r\n  }\r\n  const clearClick=()=>{\r\n    setText('')\r\n}\r\n    const changeHandler = (event)=>{\r\n\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = () => {\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert('Text copied to clipboard','success')\r\n      }\r\n  return (\r\n    <div>\r\n      <h1 style={{ color:props.mode=== 'dark'?'white': 'black'}}>{props.title}</h1>\r\n      <div  className=\"container\">\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{backgroundColor: props.mode==='dark'? '#374c6d': 'white', color:props.mode=== 'dark'?'white': 'black'}}\r\n          id=\"myBox\"\r\n          rows=\"12\"\r\n          value={text}\r\n          placeholder=\"Enter text here\"\r\n          onChange={changeHandler}\r\n        ></textarea>\r\n      </div>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={uppercaseClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={lowercaseClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={clearClick}>Clear text</button>\r\n      <div className=\"container my-4\">\r\n        <h2 style={{ color:props.mode=== 'dark'?'white': 'black'}}>Text Summary</h2>\r\n        <p style={{ color:props.mode=== 'dark'?'white': 'black'}}>Word Count = {text.length===0?0:text.split(' ').length}</p>\r\n        <p style={{ color:props.mode=== 'dark'?'white': 'black'}}>Character Count={text.length}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.Type} alert-dismissible fade show`} role=\"alert\">\r\n            {props.alert.msg}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\"\n//import About from './Components/About'\nimport { useState } from \"react\";\n//mport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n  const [Mode, setMode] = useState('light')\n\n  const showAlert=(message,type)=>{\n    setAlert({msg:message,Type:type})\n    setTimeout(()=>{setAlert(null)\n\n    },1000)\n  }\n\n  const toogleMode=()=>{\n    if (Mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#374c6d';\n      showAlert('Dark mode enabled','success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled','success')\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={Mode} toogleMode={toogleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\" >\n        {/* <Switch>\n        \n        <Route exact path=\"/\"> */}\n        <TextForm title=\"Enter the text to analyze\" showAlert={showAlert} mode={Mode} />\n        {/* </Route>\n        <Route exact path=\"/about\">\n            <About/>\n      </Route>\n        \n      </Switch> */}\n      </div>\n    {/* </Router> */}\n   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}